https://www.google.com/url?sa=i&url=https%3A%2F%2Fslidesdocs.com%2Fbackground%2Ftravel-world-map-powerpoint-background_3ebb3b2cd5&psig=AOvVaw1MqejCfllnkp3BoGyBRUDe&ust=1697739921433000&source=images&cd=vfe&opi=89978449&ved=0CBEQjRxqFwoTCIDun5ucgIIDFQAAAAAdAAAAABAE

https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.slidesdocs.com%2Fresponsive-images%2Fbackground%2Ftravel-landmarks-map-powerpoint-background_ba51004b29__960_540.jpg&tbnid=DdR4_dYISnPoUM&vet=10CBQQxiAoB2oXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc..i&imgrefurl=https%3A%2F%2Fslidesdocs.com%2Fbackground%2Ftravel-cartoon-style-map-powerpoint-background_9acd5076fd&docid=u-oUGQshvdsYCM&w=960&h=540&itg=1&q=google%20map%20background%20for%20ppt&ved=0CBQQxiAoB2oXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc

https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.slidesdocs.com%2Fresponsive-images%2Fbackground%2Ftravel-map-landmark-powerpoint-background_a256fa04ae__960_540.jpg&tbnid=omBu-4E7c-A_QM&vet=10CAoQxiAoCWoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc..i&imgrefurl=https%3A%2F%2Fslidesdocs.com%2Fbackground%2Ftravel-map-landmark-powerpoint-background_a256fa04ae&docid=crct4Wg3puWQhM&w=960&h=540&itg=1&q=google%20map%20background%20for%20ppt&ved=0CAoQxiAoCWoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc

https://www.google.com/imgres?imgurl=https%3A%2F%2Fi.pinimg.com%2F736x%2Fa2%2F68%2F84%2Fa268840bfb36a18ec3faab3b596ff8a1.jpg&tbnid=ntnhuOEgI928nM&vet=10CBgQxiAoC2oXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc..i&imgrefurl=https%3A%2F%2Fwww.pinterest.jp%2Fpin%2F609745237067486912%2F&docid=KFTrlOgpoDyK1M&w=640&h=430&itg=1&q=google%20map%20background%20for%20ppt&ved=0CBgQxiAoC2oXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc

https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.slidesdocs.com%2Fresponsive-images%2Fbackground%2Ftravel-cartoon-style-map-powerpoint-background_9acd5076fd__960_540.jpg&tbnid=NeyvhrnfivyoSM&vet=10CAIQxiAoAGoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc..i&imgrefurl=https%3A%2F%2Fslidesdocs.com%2Fbackground%2Ftravel-cartoon-style-map-powerpoint-background_9acd5076fd&docid=u-oUGQshvdsYCM&w=960&h=540&itg=1&q=google%20map%20background%20for%20ppt&ved=0CAIQxiAoAGoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc

https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.slidesdocs.com%2Fresponsive-images%2Fbackground%2Ftravel-advertising-illustration-map-powerpoint-background_3cb7e6fc34__960_540.jpg&tbnid=W0B8YFiuH3Jh_M&vet=10CAQQxiAoAmoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc..i&imgrefurl=https%3A%2F%2Fslidesdocs.com%2Fbackground%2Ftravel-advertising-illustration-map-powerpoint-background_3cb7e6fc34&docid=Mb8gzKFkMm-DeM&w=960&h=540&itg=1&q=google%20map%20background%20for%20ppt&ved=0CAQQxiAoAmoXChMIgO6fm5yAggMVAAAAAB0AAAAAEAc

https://www.google.com/imgres?imgurl=https%3A%2F%2Fslidemodel.com%2Fwp-content%2Fuploads%2F20767-01-treasure-hunt-powerpoint-template-16x9-2.jpg&tbnid=q602tTeXJhyNkM&vet=12ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMygRegQIARBS..i&imgrefurl=https%3A%2F%2Fslidemodel.com%2Ftemplates%2Ftreasure-hunt-powerpoint-template%2Ftreasure-map-powerpoint-template%2F&docid=iSFJ_4hVrznmsM&w=1280&h=720&itg=1&q=google%20map%20background%20for%20ppt&hl=en-GB&ved=2ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMygRegQIARBS

https://www.google.com/imgres?imgurl=https%3A%2F%2Fstatic1.bigstockphoto.com%2Fthumbs%2F8%2F2%2F1%2Flarge1500%2F128474159.jpg&tbnid=3sFi5Mwu5MaVzM&vet=12ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMygUegQIARBY..i&imgrefurl=https%3A%2F%2Fhotcore.info%2Fbabki%2Fus-map-powerpoint-background.htm&docid=4Vq-avtC-XNcAM&w=1500&h=1245&itg=1&q=google%20map%20background%20for%20ppt&hl=en-GB&ved=2ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMygUegQIARBY

https://www.google.com/imgres?imgurl=https%3A%2F%2Fzebrabi.com%2Fguide%2Fwp-content%2Fuploads%2F2023%2F08%2Fimage-3038.png&tbnid=zLUCSl0v3gZM1M&vet=12ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMyguegUIARCOAQ..i&imgrefurl=https%3A%2F%2Fzebrabi.com%2Fguide%2Fhow-to-create-a-map-in-powerpoint%2F&docid=W_roBaj0iT6TNM&w=768&h=512&itg=1&q=google%20map%20background%20for%20ppt&hl=en-GB&ved=2ahUKEwjT7dXmnICCAxU5amwGHfnjA-0QMyguegUIARCOAQ

https://image.slidesdocs.com/responsive-images/background/travel-cartoon-style-map-powerpoint-background_9acd5076fd__960_540.jpg


--------------------------------------------------------------------------------
CSS Main wala:


.center{
    margin-left: auto;
    margin-right: auto;
    margin-top: 200px;
    margin-bottom: 0;
}

.heading{
    font-size: 50px;
    font-weight: 300;
    padding-top: 50px;
}

#direction{
    font-size: medium;
}

#submit1{
    padding-top: 30px;
    
}

.lat{
    padding: auto;
}

th, td {
    padding-top: 10px;
    padding-bottom: 20px;
    padding-left: 15px;
    padding-right: 15px;
  }

***********************************************************************************************




HTML:
<form class="border p-3 rounded-3" >
    <table class="center">
        <tr>
            <th class="heading" colspan="4">Calculate distance</th>
        </tr>
        <tr class="lat">
            <td colspan="2"><label for="latitude1" class="form-label" style="font-size: 25px;">Latitude 1</label> </td>
            <td colspan="2"><label for="latitude2" class="form-label" style="font-size: 25px;">Latitude 2</label> </td>
        </tr>
        <tr>
            <td><input type="text" class="form-control" id="latitude1"> </td>
            <td>
            <select name="direction" id="direction">
                <option value="N">N</option>
                <option value="S">S</option>
            </select>
            </td>
            <td><input type="text" class="form-control" id="latitude2"></td>
            <td>
                <select name="direction" id="direction">
                    <option value="N">N</option>
                    <option value="S">S</option>
                </select>
            </td>
        </tr>
        <tr>
            <td colspan="2"><label for="longitude1" class="form-label" style="font-size: 25px;">Longitude 1</label> </td>
            <td colspan="2"><label for="longitude2" class="form-label" style="font-size: 25px;">Longitude 2</label> </td>
        </tr>
        <tr>
            <td><input type="text" class="form-control" id="longitude1"> </td>
            <td>
            <select name="direction" id="direction">
                <option value="W">W</option>
                <option value="E">E</option>
            </select>
            </td>
            <td><input type="text" class="form-control" id="longitude2"></td>
            <td>
                <select name="direction" id="direction">
                    <option value="W">W</option>
                    <option value="E">E</option>
                </select>
            </td>
        </tr>
        <tr id="submit1">
            <td  colspan="4"><input style="width: 90%;color:blue; font-size: large;" type="submit" value="submit"></td>
        </tr>
        <tr class>
            <td colspan="4"><input style="width: 90%;" type="text" placeholder="distance" class="distance" name="distance"></td>
        </tr>
    </table>
</form>




*********************************************************************************************************************






Folder Model
file LocationData.cs

namespace Dummy_API1.Model
{
    public class LocationData
    {
        public double Latitude1 { get; set; }
        public double Longitude1 { get; set; }
        public double Latitude2 { get; set; }
        public double Longitude2 { get; set; }

        public string Lat1D { get; set; }
        public string Lat2D { get; set; }
        public string Lon1D { get; set; }
        public string Lon2D { get; set; }

        public double Distance { get; set; }
    }

}
****************************************************************************************************************************

Folder Service
file LocationService.cs

using System;

namespace Dummy_API1.Service
{
    public interface ILocationService
    {
        double CalculateDistance(double lat1, double lon1, double lat2, double lon2, string lat1d, string lat2d, string lon1d, string lon2d);
    }

    public class LocationService : ILocationService
    {
        public double CalculateDistance(double lat1, double lon1, double lat2, double lon2,string lat1d,string lat2d,string lon1d, string lon2d)
        {
            if(lat1d.ToLower() == "s")
                lat1 =  -lat1;
            if (lat2d.ToLower() == "s")
                lat1 = -lat1;
            if (lon1d.ToLower() == "w")
                lon1 = 360 - lon1;
            if (lon2d.ToLower() == "w")
                lon2 = 360 - lon2;
            double earthRadius = 3958.75;
            double dLat = ToRadian(lat2 - lat1);
            double dLon = ToRadian(lon2 - lon1);
            double a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) +
                       Math.Cos(ToRadian(lat1)) * Math.Cos(ToRadian(lat2)) *
                       Math.Sin(dLon / 2) * Math.Sin(dLon / 2);
            double c = 2 * Math.Atan2(Math.Sqrt(a), Math.Sqrt(1 - a));
            double distance = earthRadius * c;
            return distance;
        }

        private double ToRadian(double val)
        {
            return (Math.PI / 180) * val;
        }
        // Implement the distance calculation logic (e.g., using the haversine formula)
        // Return the distance between the two points
        // You can find haversine formula implementations online.
    }
}

*******************************************************************************************************************

Startup.cs
Download this package -------- Microsoft.Extensions.DependencyInjection
using Dummy_API1.Service;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Microsoft.OpenApi.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Dummy_API1
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddScoped<ILocationService, LocationService>();
            services.AddControllers();
            services.AddSwaggerGen(c =>
            {
               
                c.SwaggerDoc("v1", new OpenApiInfo { Title = "Dummy_API1", Version = "v1" });
            });
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
                app.UseSwagger();
                app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "Dummy_API1 v1"));
            }

            app.UseHttpsRedirection();

            app.UseRouting();

            app.UseAuthorization();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
    }
}
**********************************************************************************************************************************
LocationController

using Dummy_API1.Model;
using Dummy_API1.Service;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace Dummy_API1.Controllers
{
    [ApiController]
    [Route("api/location")]
    public class LocationController : ControllerBase
    {
        private readonly ILocationService locationService;

        public LocationController(ILocationService service)
        {
            locationService = service;
        }

        [HttpPost("calculate-distance")]
        public IActionResult CalculateDistance([FromBody] LocationData locationData)
        {
            double distance = locationService.CalculateDistance(
                locationData.Latitude1, locationData.Longitude1,
                locationData.Latitude2, locationData.Longitude2, locationData.Lat1D, locationData.Lat2D,
                locationData.Lon1D, locationData.Lon2D);
            locationData.Distance = distance;
            return Ok(locationData);
        }
    }

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  Latitude 1<input type="text" [(ngModel)]="Latitude1" name="Latitude1">            
        <select [(ngModel)]="Lat1D">
            <option>N</option>
            <option>S</option>
        </select>
        <br>
        Latitude 2<input type="text" [(ngModel)]="Latitude2" name="Latitude2">
        <select [(ngModel)]="Lat2D">
            <option>N</option>
            <option>S</option>
        </select>
        <br>
        Longitude 1<input type="text" [(ngModel)]="Longitude1" name="Longitude1">
        <select [(ngModel)]="Lon1D">
            <option>W</option>
            <option>E</option>
        </select>
        <br>
        Longitude 2<input type="text" [(ngModel)]="Longitude2" name="Longitude2">
        <select [(ngModel)]="Lon2D">
            <option>W</option>
            <option>E</option>
        </select>
        <br>
        <input type="submit" value="Calculate" (click)="dist()">
        <input type="submit" value="Reset" (click)="erase()">
    <!--<form>-->
        <br>
        <table border="1">
            <tr><th>Distance</th></tr>
            <tr *ngFor="let s of LocationData">
            <td>{{s.distance}}</td>
            </tr>
            </table>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
