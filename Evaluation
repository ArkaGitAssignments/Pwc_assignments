import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';


@Injectable({
  providedIn: 'root'
})
export class StudService {

  constructor(private httpClient:HttpClient) { }

  getDist(Latitude1:number,Latitude2:number, Longitude1:number,Longitude2:number,Lat1D:string,Lat2D:string,Lon1D:string,Lon2D:string):Observable<any[]>{
    return this.httpClient.get<any[]>("https://localhost:44335/api/location/"+Latitude1+"/"+Latitude2+"/"+Longitude1+"/"+Longitude2+"/"+Lat1D+"/"+Lat2D+"/"+Lon1D+"/"+Lon2D);
  }
  getLocation(place:string):Observable<any[]>{
    return this.httpClient.get<any[]>("https://localhost:44335/api/location/"+place);
  }
}
........................................................................................

<body>
 
  <div class="main-container">  
   
   <h1>Distance Calculator</h1>
   <div class="row">
    <div class="ltn1">
      <select [(ngModel)]="place1" (click)="location()" class="opt">
        <option>Ahmedabad</option>
        <option>Bengaluru</option>
        <option>Chennai</option>
        <option>Goa</option>
        <option>Gurgaon</option>
        <option>Hyderabad</option>
        <option>Jaipur</option>
        <option>Kolkata</option>
        <option>Mumbai</option>
        <option>Pune</option>
  </select>
  <!-- <input type="submit" value="Set"  (click)="location()" class="btn"> -->
  <input type="submit" value="Erase" (click)="erase1()" class="btn">
</div>

<div class="ltn2">
  <select [(ngModel)]="place2" (click)="location1()" class="opt">
    <option>Ahmedabad</option>
    <option>Bengaluru</option>
    <option>Chennai</option>
    <option>Goa</option>
    <option>Gurgaon</option>
    <option>Hyderabad</option>
    <option>Jaipur</option>
    <option>Kolkata</option>
    <option>Mumbai</option>
    <option>Pune</option>
</select>
<!-- <input type="submit" value="Set"  (click)="location1()" class="btn"> -->
<input type="submit" value="Erase" (click)="erase2()" class="btn">
</div>
   </div>
        <div class="row">
         <div class ="lines">
           <label for="Lat1">Latitude 1</label>
           <input type="text" [(ngModel)]="Latitude1" name="Latitude1" class="val">            
         <select [(ngModel)]="Lat1D" class="opt">
             <option>N</option>
             <option>S</option>
         </select></div>
       
         <div class ="lines">
           <label for="Lat2">Latitude 2</label>
           <input type="text" [(ngModel)]="Latitude2"  name="Latitude2" class="val">
         <select [(ngModel)]="Lat2D" class="opt">
             <option>N</option>
             <option>S</option>
         </select></div>
       </div> 
       
       <div class="row">
         <div class ="lines">
           <label for="lon1">Longitude 1</label>
           <input type="text" [(ngModel)]="Longitude1" name="Longitude1" class="val">
         <select [(ngModel)]="Lon1D" class="opt">
             <option>W</option>
             <option>E</option>
         </select></div>
        
         <div class ="lines">
           <label for="lon2">Longitude 2</label>
           <input type="text" [(ngModel)]="Longitude2" name="Longitude2" class="val">
         <select [(ngModel)]="Lon2D" class="opt">
             <option>W</option>
             <option>E</option>
         </select></div>
       </div>
       
       <div class="btn">
         <input type="submit" value="Calculate" (click)="dist()" class="btn1">
         <input type="submit" value="Reset" (click)="erase()" class="btn2">
       </div>
       
     <!--<form>-->
         <br>
         <div class="section-container">
          <table>
              <tr><th>Distance (sm)</th></tr>
              <tr *ngFor="let s of LocationData">
              <td class="val">{{s.distance}}</td>
              </tr>
              </table> 
           </div>
           
       </div>
       <!-- <select [(ngModel)]="place1"  class="opt">
        <option>Gurgaon</option>
        <option>Kolkata</option>
        <option>Mumbai</option>
    </select>
    <input type="submit" value="Set"  (click)="location()">
    <select [(ngModel)]="place2"  class="opt">
      <option>Gurgaon</option>
      <option>Kolkata</option>
      <option>Mumbai</option>
  </select>
  <input type="submit" value="Set"  (click)="location1()"> -->
     </body>
......................................................................................

body{
    height:100%;
    margin:0;
    padding:150px;
    background-image: url('https://image.slidesdocs.com/responsive-images/background/travel-cartoon-style-map-powerpoint-background_9acd5076fd__960_540.jpg');
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
}


.main-container{
    align-items: center;
    text-align: center;
    position: relative;
    width: 100%;
    height: 100%;
    border: 1px solid Gray;
    background-color: rgba(211,211,211, 0.2);
    cursor:pointer;
    transition: background-color 0.17s;
}

.main-container:hover{
    background-color: rgba(0,0,0,0.5);    
}

h1{
    color: 	#E0FFFF;
    font-size: 40px;
    font-weight: bold;
    font-family: 'Times New Roman', Times, serif;
    text-decoration: underline;
}

.row{
    display: flex;
    flex-direction: row;
   align-items: center;
   justify-content: center;

}

.row input{
    margin-left: 40px;
    margin-bottom: 20px;
}

.lines{
    padding: 0.15px;
    margin-top: 20px;
}

label{
    color: aliceblue;
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
    font-size: 1.5rem;
    font-family:'Courier New', Courier, monospace;
}

.val{
    width: 200px;
    padding: 7.5px;
    border:1px solid #ccc;
    text-align: center;
    border-radius: 4px;
    margin-right: 10px;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.opt{
    font-size: 1.5rem;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bold;
    text-align: center;
}

.section-container{
    position: relative;
    top: 100%;
    left: 40%;
    width: 50%;
    transform: translateY(-10%);
}

table{
    margin-top: 10px;
    font-size: 1.5rem;
    margin-bottom: 50px;
    font-size: 2rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

th{
    color: aliceblue;
    font-size: 1.5rem;
    font-family:'Courier New', Courier, monospace;
}

td{
    background-color: white;
    color: black;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;

}

.btn1{
    margin-right: 100px;
    margin-top: 30px;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
    cursor:pointer;
    transition: background-color 0.2s;
}

.btn2{
    margin-bottom: 10px;
    margin-left: 65px;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
    cursor:pointer;
    transition: background-color 0.2s;
}

.btn1:hover{
    background-color: #AFEEEE;
}

.btn2:hover{
    background-color: #AFEEEE;
}

.ltn1{
    margin-left: 75px;
    margin-top: 30px;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
    text-align: center;
}

.ltn2{
    margin-left: 100px;
    margin-top: 30px;
    font-size: 1.5rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
    text-align: center;
}

.btn{
    font-size: 1rem;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-weight: bold;
}
